package ticketcounter;
// ENUM for Gender
enum Gender {
    MALE, FEMALE, OTHER;
}
package ticketcounter;
//person class
class Person {
    private String name;
    private int age;
    private Gender gender;
//assign fields
    Person(String name, int age, Gender gender) {
        this.name = name;
        this.age = age;
        this.gender = gender;
    }

    void displayPerson() {
        System.out.println("Name: " + name + ", Age: " + age + ", Gender: " + gender);
    }
}
package ticketcounter;
//Stack Class 
class Stack {
private Person arr[];
private int top;
private int capacity;

// Constructor 1: Empty stack with given size
Stack(int size) {
   capacity = size;
   arr = new Person[size];
   top = -1;
}

// Constructor 2: Initialize stack directly from array
Stack(Person[] inputArr) {
   capacity = inputArr.length;
   arr = new Person[capacity];
   for (int i = 0; i < capacity; i++) {
       arr[i] = inputArr[i];
   }
   top = capacity - 1;
}

// Push single Person
void push(Person p) {
   if (top == capacity - 1) {
       System.out.println("Stack Overflow!");
       return;
   }
   arr[++top] = p;
}

// Overloaded Push: Push 2 Persons
void push(Person p1, Person p2) {
   push(p1);
   push(p2);
}

// Pop single Person
Person pop() {
   if (top == -1) {
       System.out.println("Stack Underflow!");
       return null;
   }
   return arr[top--];
}

// Overloaded Pop: Pop n Persons
void pop(int n) {
   for (int i = 0; i < n; i++) {
       Person p = pop();
       if (p != null) {
           System.out.print("Popped: ");
           p.displayPerson();
       } else break;
   }
}

// Display all Persons
void display() {
   if (top == -1) {
       System.out.println("Stack is empty.");
       return;
   }
   System.out.println("Stack contents (top to bottom):");
   for (int i = top; i >= 0; i--) {
       arr[i].displayPerson();
   }
}

// Overloaded Display: Show top n Persons
void display(int n) {
   if (top == -1) {
       System.out.println("Stack is empty.");
       return;
   }
   System.out.println("Top " + n + " Persons:");
   for (int i = top; i >= 0 && n > 0; i--, n--) {
       arr[i].displayPerson();
   }
}
}
package ticketcounter;
import java.util.*;
public class Ticketcounter {

	public static void main(String[] args) {
		 {
		    try (Scanner sc = new Scanner(System.in)) 
		        {
					Stack st = null;

			System.out.println("Choose initialization:");
			System.out.println("1. Empty stack with size");
			System.out.println("2. Stack initialized with array of Persons");
			int choice = sc.nextInt();
			sc.nextLine();

		     if (choice == 1) 
	         {
		       System.out.print("Enter size: ");
		       int size = sc.nextInt();
		       sc.nextLine();
		       st = new Stack(size);
		}
		       else if (choice == 2) 
		{
		       System.out.print("Enter number of Persons: ");
		       int n = sc.nextInt();
		       sc.nextLine();
	               Person arr[] = new Person[n];
		       for (int i = 0; i < n; i++)                                                                                              
                {
	               System.out.print("Enter name: ");
		       String name = sc.nextLine();
       	               System.out.print("Enter age: ");
                       int age = sc.nextInt();
                       sc.nextLine();
		       System.out.print("Enter gender (MALE/FEMALE/OTHER): ");
		       Gender gender = Gender.valueOf(sc.nextLine().toUpperCase());
		       arr[i] = new Person(name, age, gender);
		}
	               st = new Stack(arr);
		}

			int option;
			do 
			{
			         System.out.println("\n--- Menu ---");
				 System.out.println("1. Push one Person");
				 System.out.println("2. Push two Persons");
				 System.out.println("3. Pop one Person");
				 System.out.println("4. Pop multiple Persons");
		        	 System.out.println("5. Display all Persons");
			         System.out.println("6. Display top n Persons");
				 System.out.println("7. Exit");
				 System.out.print("Enter your choice: ");
				 option = sc.nextInt();
				 sc.nextLine();

			         switch(option) 
					    {
					     case 1:
					            System.out.print("Enter name: ");
					            String name1 = sc.nextLine();
					            System.out.print("Enter age: ");
					            int age1 = sc.nextInt();
					            sc.nextLine();
					            System.out.print("Enter gender (MALE/FEMALE/OTHER): ");
					            Gender g1 = Gender.valueOf(sc.nextLine().toUpperCase());
					            st.push(new Person(name1, age1, g1));
					            break;

					     case 2:
					            System.out.print("Enter name for Person 1: ");
					            String n1 = sc.nextLine();
					            System.out.print("Enter age: ");
					            int a1 = sc.nextInt();
					            sc.nextLine();
					            System.out.print("Enter gender (MALE/FEMALE/OTHER): ");
					            Gender g11 = Gender.valueOf(sc.nextLine().toUpperCase());

					            System.out.print("Enter name for Person 2: ");
					            String n2 = sc.nextLine();
					            System.out.print("Enter age: ");
					            int a2 = sc.nextInt();
					            sc.nextLine();
					            System.out.print("Enter gender (MALE/FEMALE/OTHER): ");
					            Gender g22 = Gender.valueOf(sc.nextLine().toUpperCase());

					            st.push(new Person(n1, a1, g11), new Person(n2, a2, g22));
					            break;

					      case 3:
					            Person popped = st.pop();
					            if (popped != null) 
					            {
					                System.out.print("Popped Person: ");
					                popped.displayPerson();
					            }
					            break;

					      case 4:
					            System.out.print("Enter number of Persons to pop: ");
					            int n = sc.nextInt();
					            sc.nextLine();
					            st.pop(n);
					            break;

					      case 5:
					            st.display();
					            break;

					      case 6:
					            System.out.print("Enter number of top Persons: ");
					            int topN = sc.nextInt();
					            sc.nextLine();
					            st.display(topN);
					            break;

					      case 7:
					            System.out.println("Exiting...");
					            break;

					      default:
					            System.out.println("Invalid choice!");
					    }
					} while(option != 7);
				}
		    }
	}

OUTPUT:

Choose initialization:
1. Empty stack with size
2. Stack initialized with array of Persons

1
Enter size: 5

--- Menu ---
1. Push one Person
2. Push two Persons
3. Pop one Person
4. Pop multiple Persons
5. Display all Persons
6. Display top n Persons
7. Exit
Enter your choice: 1
Enter name: Deeksha
Enter age: 19
Enter gender (MALE/FEMALE/OTHER): FEMALE

--- Menu ---
1. Push one Person
2. Push two Persons
3. Pop one Person
4. Pop multiple Persons
5. Display all Persons
6. Display top n Persons
7. Exit
Enter your choice: 2
Enter name for Person 1: Diya
Enter age: 15
Enter gender (MALE/FEMALE/OTHER): FEMALE
Enter name for Person 2: Kiran
Enter age: 17
Enter gender (MALE/FEMALE/OTHER): MALE

--- Menu ---
1. Push one Person
2. Push two Persons
3. Pop one Person
4. Pop multiple Persons
5. Display all Persons
6. Display top n Persons
7. Exit
Enter your choice: 5
Stack contents (top to bottom):
Name: Kiran, Age: 17, Gender: MALE
Name: Diya, Age: 15, Gender: FEMALE
Name: Deeksha, Age: 19, Gender: FEMALE

--- Menu ---
1. Push one Person
2. Push two Persons
3. Pop one Person
4. Pop multiple Persons
5. Display all Persons
6. Display top n Persons
7. Exit
Enter your choice: 3
Popped Person: Name: Kiran, Age: 17, Gender: MALE

--- Menu ---
1. Push one Person
2. Push two Persons
3. Pop one Person
4. Pop multiple Persons
5. Display all Persons
6. Display top n Persons
7. Exit
Enter your choice: 4
Enter number of Persons to pop: 2
Popped: Name: Diya, Age: 15, Gender: FEMALE
Popped: Name: Deeksha, Age: 19, Gender: FEMALE







}

OUTPUT:


